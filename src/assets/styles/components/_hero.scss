@use '../variables';
@use '../properties';
@use '../mixins/layout';

// Hero

$header-gap-block: properties.$hero-gap-block;
$metadata-gap-start: properties.$space-rg;
$metadata-gap-end: properties.$metadata-gap-end;
$metadata-header-font-size: variables.$font-sm;
$metadata-header-gap-end: variables.$gap-xs;
$metadata-label-gap: variables.$gap-rg;

.hero {
  @include layout.container;
  @include layout.padding-block($header-gap-block);
}

// Metadata

.metadata {
  display: flex;
  flex-wrap: wrap;
  align-items: center;
  flex: 1;

  .metadata-media {
    margin-right: $metadata-gap-start;
    margin-bottom: $metadata-gap-end;

    img {
      @include layout.size(auto, calc(5rem + 5vw));
      border-radius: 100%;
    }
  }

  .metadata-footer,
  .metadata-header {
    display: flex;
    flex-wrap: wrap;
    align-items: center;
    font-size: $metadata-header-font-size;
  }

  .metadata-header {
    > * {
      margin-bottom: $metadata-header-gap-end;
    }
  
    > *:not(:last-child)::after {
      content: variables.$symbol-separator;
      @include layout.margin-inline(variables.$separator-gap);
      opacity: variables.$separator-opacity;
    }
  }

  .metadata-footer {
    .label {
      margin-top: $metadata-label-gap;
      @include layout.size(variables.$icon-rg * 1.5);
  
      &:not(:last-child) {
        margin-right: $metadata-label-gap;
      }
    }
  }
}
