@use '../variables';
@use '../properties';
@use '../mixins/layout';
@use '../mixins/queries';

// Container

.container {
  flex-grow: 1;
  margin: 0 auto;
  position: relative;
  width: auto;
  max-width: properties.$max-width;
  @include layout.px(properties.$space-rg);
}

// .wrapper {
//   display: flex;
//   flex-wrap: wrap;
//   align-items: flex-start;
//   justify-content: flex-start;
// }

// Icons

.svg {
  fill: none;
  stroke: currentColor;
  stroke-linecap: round;
  stroke-linejoin: round;
  vertical-align: middle;
  fill: currentColor;
  fill-opacity: 0.3;
}

.icon {
  @extend .svg;
  stroke-width: 1.5px;
  @include layout.size(variables.$icon-rg);
}

.icon-sm {
  @extend .svg;
  stroke-width: 2px;
  @include layout.size(variables.$icon-sm);
}

// Spacing

.is-sm {
  @include layout.py(properties.$space-sm);
}

.is-md {
  @include layout.py(properties.$space-md);
}

// Links

a {
  &[rel*='nofollow']::after {
    content: variables.$symbol-external-link;
  }

  .header &,
  .sidekick &,
  .card & {
    &:focus,
    &:hover {
      text-decoration: none;
    }
  }

  .sidekick & {
    display: inline-flex;
    align-items: center;

    svg {
      margin-right: variables.$char-gap-sm;
    }
  }
}

// Typography

.title {
  font-size: variables.$font-xl;
  color: variables.$text;
}

.subtitle {
  font-size: variables.$font-md;
  color: variables.$text-muted;
}

.is-primary {
  color: variables.$link;
  border-color: variables.$link;
}

.is-warning {
  $red: hsl(350, 90%, 45%);
  color: $red;
  border-color: $red;
}

// Layout

.gap-end {
  margin-right: variables.$char-gap-sm;
}

.hidden-on-small {
  @include queries.sm {
    @include layout.hide;
  }
}
