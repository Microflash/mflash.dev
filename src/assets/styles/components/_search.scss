@use '../variables';
@use '../properties';
@use '../mixins/layout';

// Search

$search-background: variables.$bg-body;
$search-box-gap-start: properties.$space-rg;
$result-background: variables.$bg-vibrant;
$result-border: variables.$border;
$result-border-width: properties.$result-border-width;
$result-gap-inline: properties.$search-gap-inline;
$result-item-gap-inline: properties.$result-gap;
$result-item-gap-block: variables.$gap-sm;

.search-container,
.search-box {
  display: flex;
  align-items: center;
  justify-content: space-between;
  margin: 0 auto;
  position: relative;
}

.search-container {
  position: absolute;
  top: properties.$search-gap-start;
  right: 0;
  bottom: 0;
  left: 0;
  width: 100%;
}

.search-box {
  background-color: $search-background;
  width: inherit;
  @include layout.padding-inline($search-box-gap-start);
  height: 100%;

  .search-input {
    outline: none;
    border: none;
    flex: 1;
    height: inherit;
  }

  .search-reset {
    line-height: 0;
  }
}

.search-results {
  display: flex;
  flex-direction: column;
  position: absolute;
  margin: 0 auto;
  top: 100%;
  right: 0;
  left: 0;
  z-index: 5;
  max-height: 75vh;
  overflow: hidden;
  @include layout.padding-inline($result-gap-inline);

  .results-box {
    overflow: auto;
    width: calc(100% - 1px);
    z-index: 4;
    background-color: $result-background;
    border: solid $result-border;
    border-width: $result-border-width;

    > * {
      display: block;
    }

    .result-label {
      font-size: variables.$font-sm;
    }

    .result-label,
    .result-item {
      padding: $result-item-gap-block $result-item-gap-inline;
    }

    .result-item {
      border-top: 1px solid $search-background;

      &:focus,
      &:hover {
        background-color: $search-background;
      }
    }
  }
}
