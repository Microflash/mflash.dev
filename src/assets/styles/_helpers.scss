@use 'variables';
@use 'properties';
@use 'mixins/queries';
@use 'mixins/utils';
@use 'mixins/grid';

// Containers

body {
  @include utils.container;
}

.layout {
  width: inherit;

  > * {
    display: flex;
    @include utils.px(properties.$space-rg);
  }
}

// Links

a {
  &[rel*='nofollow']::after {
    content: variables.$symbol-external-link;
  }

  &.active {
    font-weight: variables.$weight-bd;
  }
}

// Icons

.svg {
  stroke: currentColor;
  stroke-linecap: round;
  stroke-linejoin: round;
  vertical-align: middle;
  align-self: center;
  fill: currentColor;
  fill-opacity: variables.$fill-opacity;
}

.icon-rg {
  @extend .svg;
  stroke-width: variables.$stroke-width-rg;
  @include utils.size(variables.$icon-rg);
}

.icon-sm {
  @extend .svg;
  stroke-width: variables.$stroke-width-sm;
  @include utils.size(variables.$icon-sm);
}

// Grids

.grid-sm {
  @include grid.grid($width: variables.$grid-sm);
}

// Typography

.title {
  font-size: variables.$font-xl;
}

.subtitle {
  font-size: variables.$font-md;
  color: variables.$text-muted;
}

.is-muted {
  color: variables.$text-muted;
}

.is-primary {
  color: variables.$link;
  border-color: variables.$link;
}

.is-warning {
  $red: hsl(350, 70%, 50%);
  color: $red;
  border-color: $red;
}

// Gap

.gap-ch {
  margin-right: variables.$ch-rg;

  &-sm {
    margin-right: variables.$ch-sm;
  }
}

// Hide utility

.hidden-sm {
  @include queries.sm {
    @include utils.hide;
  }
}
