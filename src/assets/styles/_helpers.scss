@use 'variables';
@use 'properties';
@use 'mixins/layout';
@use 'mixins/queries';

// Icons

.svg {
  fill: none;
  stroke: currentColor;
  stroke-linecap: round;
  stroke-linejoin: round;
  vertical-align: middle;
  fill: currentColor;
  fill-opacity: 0.25;
}

.icon {
  @extend .svg;
  stroke-width: 1.5px;
  @include layout.size(variables.$icon-rg);
}

.icon-sm {
  @extend .svg;
  stroke-width: 2px;
  @include layout.size(variables.$icon-sm);
}

// Links

a {
  &[rel*='nofollow']::after {
    content: variables.$symbol-external-link;
  }

  &.active {
    font-weight: variables.$weight-md;
  }
}

// Typography

.title {
  font-size: variables.$font-xl;
}

.subtitle {
  font-size: variables.$font-md;
  color: variables.$text-muted;
}

.is-muted {
  color: variables.$text-muted;
}

.is-primary {
  color: variables.$link;
  border-color: variables.$link;
}

.is-warning {
  $red: hsl(350, 70%, 50%);
  color: $red;
  border-color: $red;
}

// Layout

.gap-end {
  margin-right: variables.$ch-rg;

  &-sm {
    margin-right: variables.$ch-sm;
  }
}

.hidden-sm {
  @include queries.sm {
    @include layout.hide;
  }
}

.is-column {
  flex-direction: column;
}

// Full-width elements on phone

$space-rg-neg: calc(-1rem - 2vw);

blockquote {
  @include queries.sm {
    @include layout.margin-inline($space-rg-neg);
    @include layout.padding-inline(properties.$space-rg);
  }
}

.content {
  @include queries.sm {
    flex-direction: column;

    .card {
      @include layout.margin-inline($space-rg-neg);
      border-radius: 0;
    }
  }
}

.gridsome-highlight {
  @include queries.sm {
    @include layout.margin-inline($space-rg-neg);

    pre {
      border-radius: 0;
    }

    code {
      @include layout.padding-inline(properties.$space-rg);
    }

    .gridsome-highlight-code-line {
      margin-left: $space-rg-neg;
      padding-left: properties.$space-rg;
    }
  }

  @include queries.md {
    width: 120%;
  }
}
