@use '../variables';
@use '../properties';
@use './queries';
@use './layout';

// Grid mixin
// generates a grid with cells of specified width

@mixin grid($width, $gap: variables.$gap, $fill: true) {
  display: flex;
  flex-wrap: wrap;
  width: inherit;

  display: grid;
  grid-gap: $gap;

  @if $fill {
    grid-template-columns: repeat(auto-fill, minmax($width, 1fr));
  } @else {
    grid-template-columns: repeat(auto-fit, minmax($width, 1fr));
  }

  grid-auto-rows: minmax(max-content, auto);

  @include queries.sm {
    grid-template-columns: 100%;
  }

  > * {
    flex: 1 1 $width;
    @include layout.mx($gap);
    height: 100%;
  }

  @supports (display: grid) {
    & > * {
      @include layout.mx(0);
    }
  }
}

.grid-md {
  @include grid($width: variables.$grid-md, $gap: properties.$space-sm, $fill: false);
}

.grid-lg {
  @include grid($width: variables.$grid-lg, $gap: properties.$space-sm);
}
