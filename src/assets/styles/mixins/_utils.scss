@use '../variables';
@use '../properties';
@use 'queries';

// Set dimensions

@mixin size($width, $height: $width) {
  height: $height;
  width: $width;
}

// Padding and Margin utilities

@mixin px($value) {
  padding-right: $value;
  padding-left: $value;
  padding-inline: $value;
}

@mixin py($value) {
  padding-top: $value;
  padding-bottom: $value;
  padding-block: $value;
}

@mixin mx($value) {
  margin-right: $value;
  margin-left: $value;
  margin-inline: $value;
}

@mixin my($value) {
  margin-top: $value;
  margin-bottom: $value;
  margin-block: $value;
}

// Visibility

@mixin hide($hidden: true, $display-fallback: unset) {
  @if $hidden {
    visibility: hidden;
    display: none;
  } @else {
    visibility: visible;
    display: $display-fallback;
  }
}

// Full-width

$pgap: properties.$space-rg;
$ngap: properties.$negative-space-rg;

@mixin fullwidth($my: false) {
  @if $my {
    margin: $pgap $ngap;
  } @else {
    margin-right: $ngap;
    margin-left: $ngap;
  }

  padding: $pgap;
}

// Even-gap

$even-gap: variables.$ch-rg;

@mixin even-gap($gap: $even-gap) {
  & > *:not(:last-child) {
    margin-right: $gap;
  }
}

// Tappable

$tappable-radius: variables.$radius;
$tappable-gapx: variables.$gap-sm;
$tappable-gapy: variables.$gap-xs;
$tappable-background: variables.$bg-passive;

@mixin tappable($radius: $tappable-radius, $gapx: $tappable-gapx, $gapy: $tappable-gapy) {
  border-radius: $radius;
  padding: $gapy $gapx;

  &:focus,
  &:hover {
    background-color: $tappable-background;
    text-decoration: none;
  }
}

// Separator

@mixin separator() {
  content: variables.$symbol-separator;
  @include mx(variables.$separator-gap);
  opacity: variables.$separator-opacity;
}
